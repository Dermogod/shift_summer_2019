Обнаружение SSTI

Данная методика была представлена на конференции Black Hat USA 2015.

Итак, есть два способа использования введённых пользователем данных.

Первый способ: пользовательский ввод помещается в шаблонное выражение.

$output = $twig->render($_GET['smarty'], array("first_name" => $user.first_name) );

И предположим,  что пользователь передаёт следующий параметр:

smarty=Hello

Ответ:

Hello

Для обнаружения SSTI нам нужно внедрить какое-нибудь выражение. Да, шаблонизаторов много, но почти все из них имеют одинаковый базовый синтаксис. Так что если мы передадим в качестве параметра:

smarty=Hello ${7*7}

то получим в ответ:

Hello 49

Второй способ: пользовательский ввод может быть помещён внутри шаблонного выражения, как правило, в качестве имени переменной.

personal_greeting=username

Hello user01

Изменение имени переменной (username) вернёт либо пустой результат, либо сообщение об ошибке. Обнаружить это немного сложней: сначала отправляем серверу имя переменной вместе с каким-нибудь тегом, а потом пытаемся выйти за пределы кода.

personal_greeting=username<tag>

Hello


personal_greeting=username}}<tag>

Hello user01 <tag>

Идентификация:
Нам всего-то нужно подставлять конкретные выражения и следить за ответом сервера. В некоторых случаях одно выражаение может приводить к разным ответам сервера (в зависимость от того, какой шаблонизатор используется). Например, {{7*’7′}} вернёт 49, если используется Twig, 7777777, если используется Jinja2
